<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    	http://www.springframework.org/schema/beans/spring-beans.xsd
    	http://www.springframework.org/schema/context
    	http://www.springframework.org/schema/context/spring-context.xsd
    	http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/util https://www.springframework.org/schema/util/spring-util.xsd">

    <!-- Step 3: Add support for component scanning -->
    <context:component-scan base-package="com.yeonkyu.springtest" />

    <!-- Step 4: Add support for conversion, formatting and validation support -->
    <mvc:annotation-driven/>

    <!-- Step 5: Define Spring MVC view resolver -->
    <bean
            class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/" />
        <property name="suffix" value=".jsp" />
    </bean>

    <!-- Step 6: Define Resource file Path as CSS, Image, js-->
    <mvc:resources mapping="/resources/**" location="../resources/"></mvc:resources>

    <!-- Properties file for countries -->
    <util:properties id="countryOptions" location="/WEB-INF/resources/countries.properties"/>

    <!-- Load custom messages resources -->
<!--    <bean id="messageSource"-->
<!--          class="org.springframework.context.support.ResourceBundleMessageSource">-->
<!--        <property name="basenames" value="/WEB-INF/resources/messages/messages_ko_KR.properties" />-->
<!--    </bean>-->
</beans>